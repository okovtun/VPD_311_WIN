https://github.com/okovtun/VPD_311_WIN.git
https://www.youtube.com/playlist?list=PLeqyOOqxeiIMzgKUFeiPLsuU-t46Kvv4e

Refs:
https://learn.microsoft.com/en-us/windows/win32/controls/individual-control-info
https://learn.microsoft.com/ru-ru/windows/win32/learnwin32/introduction-to-windows-programming-in-c--

TODO:
1. Реализовать элементы контекстного меню;
	Topmost - часы будут отображаться поверх всех окон;
	Show controls - показать элементы управления;
2. Прикрутить кастомный шрифт;

DONE:
1. На каждой кнопке отобразить свою иконку;						DONE
2. На экране калькулятора использовать кастомный шрифт;			DONE
3. При нажатии ПКМ на калькуляторе отобраить контекстное меню,
   из которого можно выбрать скин и шрифт экрана калькулятора;	DONE
4. При переключении скинов должен меняться цвет окна, экрана	DONE
   и шрифта на экране  калькулятора;
5. В контекстное меню добавить шрифты;
	https://stackoverflow.com/questions/58712918/win32-use-a-resource-font-inside-the-application
6. Каждый отдельный скин вынести в свой DLL-файл:				DONE
	https://learn.microsoft.com/en-us/cpp/build/creating-a-resource-only-dll?view=msvc-170;
7. Сделать программу установки калькулятора в систему;
	!!!https://learn.microsoft.com/en-us/cpp/windows/walkthrough-deploying-a-visual-cpp-application-by-using-a-setup-project?view=msvc-170
	???https://learn.microsoft.com/en-us/windows/msix/app-installer/create-appinstallerfile-vs
8. При выходе из калькулятора активная тема и шрифт должны сохраняться,
   и восстанавливаться при следующем запуске

DONE:
1. Выучить побитовые операции: NOT, OR, AND, XOR;
2. Реализовать кнопки '<-' и 'C';
3. Организовать вычисления;

DONE:
1. Поставить значек в окно Калькулятора;	DONE
2. Создать кнопки на Калькуляторе;			DONE

DONE:
1. Выяснить в чем разница между hIcon и hIconSm, для этого в них нужно загрузить разные иконки;	DONE
2. Загрузить анимированный курсор;		DONE
3. Окно должно запускаться ровно посередине экрана, и занимать ровно 75%, независимо от размера экрана; DONE
4. При перетаскивании окна, и изменении его размеров в строке заголовка должны отображаться размер окна,DONE
   и его положение на экране;

DONE:
1. Запретить возможность добавления одинаковых значений;						DONE
2. При открытии окна 'Добавить вхожение' фокус должен быть на текстовом поле;	DONE
3. Реализовать кнопку 'Удалить';		DONE
4. При двойном щелчке по элементу ListBox, должно открываться окно 'Добавить',
   в текстовое поле которого загружен выбранный элемент, и при нажатии на кнопку 'OK'	DONE
   выбранный элемент в ListBox должен изменяться;
5. Элементы списка должны удаляться при нажатии клавиши 'Delete';
6. Элементы списка должны открываться на редактирование при нажатии на кнопку 'Enter';

DONE:
1. В Solution 'WinAPI' добавить проект 'ListBox', и в этом проекте реализовать аналогичную программу,	DONE
   только с использованием ListBox вместо ComboBox;
2. ***В проекте 'WinAPI' на диалоговое окно добавить два текстовых поля (EditControl) и кнопку 'Copy'.	DONE
   При нажатии на конпку 'Copy', текст, введенный в первую строку должен скопироваться во вторую строку;
3. В проект 'ListBox' добавить кнопки 'Добавить' и 'Удалить', которые добавляют элемент в ListBox,
   или удаляют элемент из ListBox;

DONE:
1. Прикрепить ссылку на свою репу;
2. Отдохнуть))
3. Если не смогли залить на GitHub, просто напишите "DONE"